{"version":3,"sources":["./src/app/payout-method/payout-method.page.html","./src/app/payout-method/payout-method-routing.module.ts","./src/app/payout-method/payout-method.module.ts","./src/app/payout-method/payout-method.page.scss","./src/app/payout-method/payout-method.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wjDAAy/C,E;;;;;;;;;;;;;;;;;;;ACA/9C;AACc;AAEC;AAExD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC5B;CACF,CAAC;IAMW,6BAA6B,SAA7B,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACiB;AAEnB;AAEkC;AAEvB;AACH;AACW;AACT;AACE;IAgB5C,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAdlC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,2FAA6B;YAC7B,oEAAa;YACb,+EAAkB;YAClB,sEAAc;YACd,yEAAe;YACf,kEAAmB;SACtB;QACH,YAAY,EAAE,CAAC,oEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;AC5BnC;AAAe,gFAAiB,gBAAgB,GAAG,kBAAkB,qBAAqB,GAAG,eAAe,wBAAwB,GAAG,6CAA6C,mgBAAmgB,E;;;;;;;;;;;;;;;;;;;;ACAroB;AACgB;AACA;AACP;IAO9C,gBAAgB,SAAhB,gBAAgB;IAI3B,YAAqB,WAAwB,EAAU,GAAsB,EAAU,OAAuB;QAAzF,gBAAW,GAAX,WAAW,CAAa;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,YAAO,GAAP,OAAO,CAAgB;IAAI,CAAC;IAInH,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAGD,eAAe;QACb,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC1B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC7B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;aAC7B,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;QACrD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAErB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,MAAM,IAAI,GAAG;YACX,IAAI,EAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI;YAC9B,IAAI,EAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;YACjC,KAAK,EAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;YAChC,IAAI,EAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE;YAChC,MAAM,EAAE,IAAI;SACb,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YAC1C,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;QACzD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,kBAAkB;QAChB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QACrD,MAAM,IAAI,GAAG;YACX,IAAI,EAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI;YAC9B,IAAI,EAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;YACjC,KAAK,EAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;SACjC,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YACjE,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;QACzD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;CAKF;;YA7EO,0DAAW;YACX,+EAAiB;YACjB,wEAAc;;AAOT,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,yOAAwC;;KAEzC,CAAC;GACW,gBAAgB,CAoE5B;AApE4B","file":"payout-method-payout-method-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Edit Payment Method</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n<div class=\\\"container\\\">\\r\\n  <mat-card class=\\\"payout-card mat-elevation-z3\\\">\\r\\n    <form [formGroup]=\\\"payment\\\">\\r\\n      <mat-form-field>\\r\\n        <mat-label>Account Holder Name</mat-label>\\r\\n        <input formControlName=\\\"name\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n<!--      <mat-form-field appearance=\\\"fill\\\">-->\\r\\n<!--        <mat-label>Cars</mat-label>-->\\r\\n<!--        <select matNativeControl required>-->\\r\\n<!--          <option value=\\\"volvo\\\">Volvo</option>-->\\r\\n<!--          <option value=\\\"saab\\\">Saab</option>-->\\r\\n<!--          <option value=\\\"mercedes\\\">Mercedes</option>-->\\r\\n<!--          <option value=\\\"audi\\\">Audi</option>-->\\r\\n<!--        </select>-->\\r\\n<!--      </mat-form-field>-->\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Account No.</mat-label>\\r\\n        <input formControlName=\\\"account\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Swift/BIC</mat-label>\\r\\n        <input formControlName=\\\"swift\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    </form>\\r\\n  </mat-card>\\r\\n\\r\\n  <button class=\\\"save-btn\\\" mat-button (click)=\\\"exist ? updatePayoutMethod() : postPayoutMethod()\\\">Save</button>\\r\\n</div>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PayoutMethodPage } from './payout-method.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PayoutMethodPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PayoutMethodPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PayoutMethodPageRoutingModule } from './payout-method-routing.module';\r\n\r\nimport { PayoutMethodPage } from './payout-method.page';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        PayoutMethodPageRoutingModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule\r\n    ],\r\n  declarations: [PayoutMethodPage]\r\n})\r\nexport class PayoutMethodPageModule {}\r\n","export default \"mat-form-field {\\n  width: 100%;\\n}\\n\\n.payout-card {\\n  margin-top: 20px;\\n}\\n\\n.mat-card {\\n  border-radius: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF5b3V0LW1ldGhvZC9wYXlvdXQtbWV0aG9kLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUFDRjs7QUFDQTtFQUNFLGdCQUFBO0FBRUY7O0FBQ0E7RUFDRSxtQkFBQTtBQUVGIiwiZmlsZSI6InNyYy9hcHAvcGF5b3V0LW1ldGhvZC9wYXlvdXQtbWV0aG9kLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5wYXlvdXQtY2FyZHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG4ubWF0LWNhcmR7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuXHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ApiServiceService} from '../services/api-service.service';\r\nimport {SessionService} from '../services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-payout-method',\r\n  templateUrl: './payout-method.page.html',\r\n  styleUrls: ['./payout-method.page.scss'],\r\n})\r\nexport class PayoutMethodPage implements OnInit {\r\n  payment: FormGroup;\r\n  payoutData;\r\n\r\n  constructor( private formBuilder: FormBuilder, private api: ApiServiceService, private session: SessionService) { }\r\n\r\n  exist;\r\n\r\n  ngOnInit() {\r\n    this.payment = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      account: ['', Validators.required],\r\n      swift: ['', Validators.required]\r\n    });\r\n    this.getPayoutMethod();\r\n  }\r\n\r\n\r\n  getPayoutMethod() {\r\n    this.api.getPayoutByUser(this.session.getUser().id).subscribe(data => {\r\n      this.payoutData = data.results[0];\r\n      this.payment.patchValue({\r\n        name: data.results[0].name,\r\n        account: data.results[0].bank,\r\n        swift: data.results[0].swift,\r\n      });\r\n      this.exist = true;\r\n      console.log('this is payout method of user', data);\r\n    }, error => {\r\n      console.log('this is payout method of user', error);\r\n      this.exist = false;\r\n\r\n    });\r\n  }\r\n\r\n  postPayoutMethod() {\r\n    const body = {\r\n      name : this.payment.value.name,\r\n      bank : this.payment.value.account,\r\n      swift : this.payment.value.swift,\r\n      user : this.session.getUser().id,\r\n      enable: true\r\n    };\r\n    this.api.postPayout(body).subscribe( data => {\r\n      console.log('Payout method posted successfully', data);\r\n    }, error => {\r\n      console.log('An error occurred while posting payout method', error);\r\n    });\r\n  }\r\n\r\n\r\n  updatePayoutMethod() {\r\n    console.log('this is payout data', this.payoutData );\r\n    const body = {\r\n      name : this.payment.value.name,\r\n      bank : this.payment.value.account,\r\n      swift : this.payment.value.swift,\r\n    };\r\n    this.api.updatePayout(this.payoutData._id, body).subscribe( data => {\r\n      console.log('Payout method posted successfully', data);\r\n    }, error => {\r\n      console.log('An error occurred while posting payout method', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}