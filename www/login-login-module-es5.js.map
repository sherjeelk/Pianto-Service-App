{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","local","formBuilder","api","router","session","util","loading","takeToHome","loginForm","group","email","required","password","checkLogin","then","isLoggedIn","navigate","replaceUrl","body","value","login","toPromise","loginResponse","user","role","openSnackBar","tokens","access","saveInfo","console","log","token","data","setToken","getValue","fcmToken","setFCMToken","id","fcm","setHeaders","setUser","navigateByUrl","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Login</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"!util.loading\\\">\\r\\n    <form (ngSubmit)=\\\"login()\\\" [formGroup]=\\\"loginForm\\\">\\r\\n    <mat-card class=\\\"mat-elevation-z3 login-card\\\">\\r\\n      <h3 class=\\\"text-center\\\">Pianto</h3>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Email</mat-label>\\r\\n          <input type=\\\"email\\\" formControlName=\\\"email\\\" matInput>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Password</mat-label>\\r\\n          <input formControlName=\\\"password\\\" type=\\\"password\\\" email=\\\"password\\\" matInput>\\r\\n        </mat-form-field>\\r\\n\\r\\n    </mat-card>\\r\\n\\r\\n    <button mat-button class=\\\"save-btn\\\" type=\\\"submit\\\">Login</button>\\r\\n\\r\\n    </form>\\r\\n\\r\\n    <p class=\\\"cp-text\\\">\\r\\n      Â© Copyright 2020 Pianto. All rights reserved.\\r\\n    </p>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"util.loading\\\" class=\\\"loading\\\">\\r\\n    <img src=\\\"assets/icon/icon.png\\\" width=\\\"64\\\" height=\\\"64\\\">\\r\\n    <h5 class=\\\"m-t-30\\\">Loading...</h5>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        LoginPageRoutingModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule,\r\n        MatSnackBarModule\r\n    ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","export default \".login-card {\\n  margin-top: 20px;\\n  border-radius: 12px;\\n}\\n\\n.cp-text {\\n  color: rgba(0, 0, 0, 0.7);\\n  text-shadow: 0 1px rgba(255, 255, 255, 0.1);\\n  font-size: 12px;\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\nbutton:focus {\\n  outline: none !important;\\n}\\n\\n.loading {\\n  width: 100%;\\n  height: 100vh;\\n  overflow: hidden;\\n  text-align: center;\\n  padding-top: 50%;\\n  background-color: #fafafa;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQVUseUJBQUE7RUFDUiwyQ0FBQTtFQUNBLGVBQUE7RUFDRixrQkFBQTtFQUFtQixnQkFBQTtBQUduQjs7QUFEQTtFQUNFLHdCQUFBO0FBSUY7O0FBREE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0FBSUYiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY2FyZHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbn1cclxuXHJcbi5jcC10ZXh0eyBjb2xvcjogcmdiYSgwLDAsMCwuNyk7XHJcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcclxuICBmb250LXNpemU6IDEycHg7XHJcbnRleHQtYWxpZ246IGNlbnRlcjttYXJnaW4tdG9wOiAyMHB4fVxyXG5cclxuYnV0dG9uOmZvY3VzIHtcclxuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5sb2FkaW5ne1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZy10b3A6IDUwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {ApiServiceService} from '../services/api-service.service';\r\nimport {SessionService} from '../services/session.service';\r\nimport {UtilService} from '../services/util.service';\r\nimport {LocalStorageService} from '../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = true;\r\n\r\n  constructor(private local: LocalStorageService, private formBuilder: FormBuilder, private api: ApiServiceService, private router: Router, private session: SessionService, public util: UtilService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.takeToHome();\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  takeToHome(){\r\n    this.util.checkLogin().then(() => {\r\n      if (this.session.isLoggedIn){\r\n        this.router.navigate(['/tab/tabs/home'], {replaceUrl: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    this.takeToHome();\r\n  }\r\n\r\n  async login() {\r\n\r\n    const body = {\r\n      email : this.loginForm.value.email,\r\n      password : this.loginForm.value.password\r\n    };\r\n\r\n    try {\r\n      const loginResponse =  await this.api.login(body).toPromise();\r\n      if (loginResponse.user.role !== 'service') {\r\n        this.util.openSnackBar('Please login through Service Man id', '');\r\n      } else {\r\n        if (loginResponse.tokens.access) {\r\n          await this.saveInfo(loginResponse);\r\n        }\r\n        console.log('this is login response', loginResponse.tokens.access.token);\r\n      }\r\n    } catch (e) {\r\n      this.util.openSnackBar(e, '');\r\n      // Now call msg service and there should be an special dialog for error this.msgService.showError(e.msg)\r\n    }\r\n  }\r\n\r\n\r\n  async saveInfo(data){\r\n    console.log('this is user data from api', data);\r\n    try {\r\n      await this.session.setToken(data.tokens.access.token);\r\n      await this.api.setToken(data.tokens.access.token);\r\n      const fcmToken = await this.local.getValue('fcm_token');\r\n      const fcm = await this.api.setFCMToken(data.user.id, fcmToken).toPromise();\r\n      console.log('FCM TOKEN', fcm, fcmToken);\r\n      await this.api.setHeaders();\r\n      await this.session.setUser(data.user);\r\n      await this.router.navigateByUrl('/tab/tabs/home');\r\n      console.log('It should move');\r\n    } catch (e) {\r\n      console.log('an error occurred in saving info', e);\r\n    }\r\n  }\r\n\r\n  // async checkLogin() {\r\n  //   // show loading\r\n  //   this.loading = true;\r\n  //   console.log('this is session login', this.session.isLoggedIn);\r\n  //   if (this.session.isSessionReady){\r\n  //     if (this.session.isLoggedIn) {\r\n  //       this.router.navigate(['tab/tabs/home'], {replaceUrl: true});\r\n  //     }\r\n  //     this.loading = false;\r\n  //   } else {\r\n  //     setTimeout(() => {\r\n  //       this.checkLogin();\r\n  //     }, 300);\r\n  //   }\r\n  // }\r\n\r\n}\r\n"]}