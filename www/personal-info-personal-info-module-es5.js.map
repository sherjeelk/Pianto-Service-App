{"version":3,"sources":["webpack:///src/app/personal-info/personal-info.page.html","webpack:///src/app/personal-info/personal-info-routing.module.ts","webpack:///src/app/personal-info/personal-info.module.ts","webpack:///src/app/personal-info/personal-info.page.scss","webpack:///src/app/personal-info/personal-info.page.ts"],"names":["routes","path","component","PersonalInfoPageRoutingModule","imports","forChild","exports","PersonalInfoPageModule","declarations","PersonalInfoPage","formBuilder","api","localStorage","session","util","city","postCodeIsValid","init","profileForm","group","firstName","required","lastName","telephone","email","newCiy","checkLogin","getUserDetails","value","length","checkAvailability","post","undefined","postcode","console","log","body","type","getAllSearchInExtras","subscribe","data","postcodes","postCodeResult","name","openSnackBar","error","getUser","id","userData","patchValue","phone","address","country","valid","updateUser","lowercaseCity","toLowerCase","push","selector","template"],"mappings":"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","file":"personal-info-personal-info-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Edit Personal Info</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <mat-card *ngIf=\\\"session.getUser().id\\\" class=\\\"edit-info mat-elevation-z3\\\">\\r\\n    <form [formGroup] = profileForm >\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Name</mat-label>\\r\\n        <input minlength=\\\"2\\\" formControlName=\\\"firstName\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Last Name</mat-label>\\r\\n        <input formControlName=\\\"lastName\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Email</mat-label>\\r\\n        <input style=\\\"background: #e7e7e7\\\" readonly formControlName=\\\"email\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Mobile</mat-label>\\r\\n        <input minlength=\\\"10\\\" formControlName=\\\"telephone\\\" matInput type=\\\"text\\\">\\r\\n        <mat-error>Please enter a valid 10 digit mobile number</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n<!--      Add multiple cities not required in Pianto v2-->\\r\\n\\r\\n\\r\\n<!--        <mat-form-field >-->\\r\\n<!--          <mat-label>Add postcode to add city</mat-label>-->\\r\\n<!--            <input matInput  id=\\\"input-post\\\"-->\\r\\n<!--                   #postcode maxlength=\\\"5\\\"  (input)=\\\"onSearchChange($event.target.value)\\\"   placeholder=\\\"postcode\\\" type=\\\"text\\\">-->\\r\\n<!--        </mat-form-field>-->\\r\\n\\r\\n<!--      <mat-form-field >-->\\r\\n<!--            <mat-label >City</mat-label>-->\\r\\n<!--            <input matInput  formControlName=\\\"newCiy\\\" id=\\\"input-city\\\"-->\\r\\n<!--                   style=\\\"cursor: not-allowed\\\"  readonly  [(ngModel)]=\\\"post\\\"   placeholder=\\\"City\\\" type=\\\"text\\\">-->\\r\\n<!--      </mat-form-field>-->\\r\\n<!--      <div *ngIf=\\\"city.length > 0\\\" class=\\\"grid-chip\\\">-->\\r\\n<!--        <span class=\\\"chip\\\" *ngFor=\\\"let loc of city\\\">-->\\r\\n<!--        <span *ngIf=\\\"loc.name\\\">-->\\r\\n<!--          {{loc.name}}-->\\r\\n<!--          <span (click)=\\\"removeCity(loc)\\\" style=\\\"margin-left: 5px\\\">-->\\r\\n<!--            <ion-icon name=\\\"close-outline\\\"></ion-icon>-->\\r\\n<!--          </span>-->\\r\\n<!--        </span>-->\\r\\n<!--      </span>-->\\r\\n<!--      </div>-->\\r\\n<!--      <div>-->\\r\\n<!--        <button mat-flat-button class=\\\"save\\\" [disabled]=\\\"!postCodeIsValid\\\" (click)=\\\"addCity(post)\\\">Add City</button>-->\\r\\n<!--      </div>-->\\r\\n\\r\\n    </form>\\r\\n  </mat-card>\\r\\n\\r\\n  <button class=\\\"save-btn\\\" mat-button (click)=\\\"updateUser()\\\">Save Profile</button>\\r\\n\\r\\n</div>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PersonalInfoPage } from './personal-info.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PersonalInfoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PersonalInfoPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PersonalInfoPageRoutingModule } from './personal-info-routing.module';\r\n\r\nimport { PersonalInfoPage } from './personal-info.page';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        PersonalInfoPageRoutingModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule\r\n    ],\r\n  declarations: [PersonalInfoPage]\r\n})\r\nexport class PersonalInfoPageModule {}\r\n","export default \"mat-form-field {\\n  width: 100%;\\n}\\n\\n.edit-info {\\n  margin-top: 20px;\\n}\\n\\n.chip {\\n  background: #24b47e;\\n  color: white;\\n  padding: 5px 15px;\\n  border-radius: 20px;\\n  margin: 5px;\\n}\\n\\n.save {\\n  background: teal;\\n  color: white;\\n  margin-top: 20px;\\n}\\n\\n.grid-chip {\\n  display: grid;\\n  grid-template-columns: repeat(2, 40%);\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29uYWwtaW5mby9wZXJzb25hbC1pbmZvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxxQ0FBQTtFQUNBLHVCQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9wZXJzb25hbC1pbmZvL3BlcnNvbmFsLWluZm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5lZGl0LWluZm97XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLmNoaXB7XHJcbiAgYmFja2dyb3VuZDogIzI0YjQ3ZTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogNXB4IDE1cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICBtYXJnaW46IDVweDtcclxufVxyXG5cclxuLnNhdmV7XHJcbiAgYmFja2dyb3VuZDogdGVhbDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLmdyaWQtY2hpcHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDQwJSk7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {User} from '../models/UserDetail';\r\nimport {ApiServiceService} from '../services/api-service.service';\r\nimport {LocalStorageService} from '../services/local-storage.service';\r\nimport {SessionService} from '../services/session.service';\r\nimport {UtilService} from '../services/util.service';\r\nimport * as _ from 'lodash';\r\nimport {Extra} from '../models/Extras';\r\n\r\n@Component({\r\n  selector: 'app-personal-info',\r\n  templateUrl: './personal-info.page.html',\r\n  styleUrls: ['./personal-info.page.scss'],\r\n})\r\nexport class PersonalInfoPage implements OnInit {\r\n\r\n  profileForm: FormGroup;\r\n  private userData: User;\r\n  city = [];\r\n  post;\r\n  public postcodes: Extra[];\r\n  public postCodeResult: any;\r\n  public postCodeIsValid = false;\r\n  postCodeEnter: any;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: ApiServiceService, private localStorage: LocalStorageService,\r\n              public session: SessionService, private util: UtilService) {}\r\n\r\n  ngOnInit(): void {\r\n  this.init();\r\n  }\r\n\r\n  async init(){\r\n    this.profileForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: [''],\r\n      telephone: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      // address: ['', Validators.required],\r\n      city: [''],\r\n      // postcode: [''],\r\n      newCiy: ['']\r\n    });\r\n    await this.util.checkLogin();\r\n    this.getUserDetails();\r\n  }\r\n\r\n  onSearchChange(value) {\r\n    if (value.length === 5) {\r\n      this.checkAvailability(value);\r\n    } else {\r\n      this.postCodeIsValid = false;\r\n      this.post = undefined;\r\n    }\r\n  }\r\n\r\n  checkAvailability(postcode) {\r\n    console.log('these are postcodes', postcode);\r\n    const body = [{type: 'postcode'}, {value: postcode}];\r\n    this.api.getAllSearchInExtras(body).subscribe(data => {\r\n      this.postcodes = data;\r\n      console.log('postcodes***********', this.postcodes);\r\n\r\n      if (_.find(this.postcodes, {value: postcode})) {\r\n        this.postCodeResult = _.find(this.postcodes, {value: postcode});\r\n        this.postCodeIsValid = true;\r\n        this.post = this.postCodeResult.name;\r\n      } else {\r\n        this.util.openSnackBar('Please enter a valid postcode', '');\r\n        console.log('this postcode is not available');\r\n        this.postCodeIsValid = false;\r\n        this.post = undefined;\r\n\r\n      }\r\n    }, error => {\r\n      console.log('An error occurred while fetching postcodes', error);\r\n    });\r\n  }\r\n\r\n\r\n  async getUserDetails() {\r\n    await this.api.getUser(this.session.getUser().id).subscribe(data => {\r\n      this.userData = data;\r\n      this.profileForm.patchValue({\r\n        firstName: this.userData.name,\r\n        lastName: this.userData.lastName,\r\n        telephone: this.userData.phone,\r\n        email: this.userData.email,\r\n        address: this.userData.city + this.userData.country + this.userData.postcode,\r\n        postcode: this.userData.postcode\r\n      });\r\n      this.city = this.userData.city;\r\n      console.log('This is user data', this.userData);\r\n    }, error => {\r\n      console.log('an error occurred while fetching user data', error);\r\n    });\r\n  }\r\n\r\n  updateUser() {\r\n    const body = {\r\n      name: this.profileForm.value.firstName,\r\n      lastName: this.profileForm.value.lastName,\r\n      phone: this.profileForm.value.telephone,\r\n      city: this.profileForm.value.city,\r\n    };\r\n    body.city = this.city;\r\n\r\n    if (this.profileForm.valid){\r\n      this.api.updateUser(this.session.getUser().id, body).subscribe(data => {\r\n        console.log('pofile updated', data);\r\n        this.util.openSnackBar('Profile updated successfully', '');\r\n      }, error => {\r\n        console.log('error occurred while updating', error);\r\n      });\r\n    } else {\r\n      this.util.openSnackBar('Please correct form errors first', '');\r\n\r\n    }\r\n\r\n  }\r\n\r\n  addCity(value: string) {\r\n    const lowercaseCity = value.toLowerCase();\r\n    this.city.push({name : lowercaseCity});\r\n  }\r\n\r\n  removeCity(name) {\r\n    console.log('these are city before removing', this.city);\r\n    _.remove(this.city, {name : name.name});\r\n    console.log('these are city after removing', this.city);\r\n\r\n  }\r\n}\r\n"]}