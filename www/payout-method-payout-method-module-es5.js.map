{"version":3,"sources":["webpack:///src/app/payout-method/payout-method.page.html","webpack:///src/app/payout-method/payout-method-routing.module.ts","webpack:///src/app/payout-method/payout-method.module.ts","webpack:///src/app/payout-method/payout-method.page.scss","webpack:///src/app/payout-method/payout-method.page.ts"],"names":["routes","path","component","PayoutMethodPageRoutingModule","imports","forChild","exports","PayoutMethodPageModule","declarations","PayoutMethodPage","formBuilder","api","session","payment","group","name","required","account","swift","getPayoutMethod","getPayoutByUser","getUser","id","subscribe","data","payoutData","results","patchValue","bank","exist","console","log","error","body","value","user","enable","postPayout","updatePayout","_id","selector","template"],"mappings":"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","file":"payout-method-payout-method-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Edit Payment Method</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n<div class=\\\"container\\\">\\r\\n  <mat-card class=\\\"payout-card mat-elevation-z3\\\">\\r\\n    <form [formGroup]=\\\"payment\\\">\\r\\n      <mat-form-field>\\r\\n        <mat-label>Account Holder Name</mat-label>\\r\\n        <input formControlName=\\\"name\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n<!--      <mat-form-field appearance=\\\"fill\\\">-->\\r\\n<!--        <mat-label>Cars</mat-label>-->\\r\\n<!--        <select matNativeControl required>-->\\r\\n<!--          <option value=\\\"volvo\\\">Volvo</option>-->\\r\\n<!--          <option value=\\\"saab\\\">Saab</option>-->\\r\\n<!--          <option value=\\\"mercedes\\\">Mercedes</option>-->\\r\\n<!--          <option value=\\\"audi\\\">Audi</option>-->\\r\\n<!--        </select>-->\\r\\n<!--      </mat-form-field>-->\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Account No.</mat-label>\\r\\n        <input formControlName=\\\"account\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Swift/BIC</mat-label>\\r\\n        <input formControlName=\\\"swift\\\" matInput type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    </form>\\r\\n  </mat-card>\\r\\n\\r\\n  <button class=\\\"save-btn\\\" mat-button (click)=\\\"exist ? updatePayoutMethod() : postPayoutMethod()\\\">Save</button>\\r\\n</div>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PayoutMethodPage } from './payout-method.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PayoutMethodPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PayoutMethodPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PayoutMethodPageRoutingModule } from './payout-method-routing.module';\r\n\r\nimport { PayoutMethodPage } from './payout-method.page';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        PayoutMethodPageRoutingModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule\r\n    ],\r\n  declarations: [PayoutMethodPage]\r\n})\r\nexport class PayoutMethodPageModule {}\r\n","export default \"mat-form-field {\\n  width: 100%;\\n}\\n\\n.payout-card {\\n  margin-top: 20px;\\n}\\n\\n.mat-card {\\n  border-radius: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF5b3V0LW1ldGhvZC9wYXlvdXQtbWV0aG9kLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUFDRjs7QUFDQTtFQUNFLGdCQUFBO0FBRUY7O0FBQ0E7RUFDRSxtQkFBQTtBQUVGIiwiZmlsZSI6InNyYy9hcHAvcGF5b3V0LW1ldGhvZC9wYXlvdXQtbWV0aG9kLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5wYXlvdXQtY2FyZHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG4ubWF0LWNhcmR7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuXHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ApiServiceService} from '../services/api-service.service';\r\nimport {SessionService} from '../services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-payout-method',\r\n  templateUrl: './payout-method.page.html',\r\n  styleUrls: ['./payout-method.page.scss'],\r\n})\r\nexport class PayoutMethodPage implements OnInit {\r\n  payment: FormGroup;\r\n  payoutData;\r\n\r\n  constructor( private formBuilder: FormBuilder, private api: ApiServiceService, private session: SessionService) { }\r\n\r\n  exist;\r\n\r\n  ngOnInit() {\r\n    this.payment = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      account: ['', Validators.required],\r\n      swift: ['', Validators.required]\r\n    });\r\n    this.getPayoutMethod();\r\n  }\r\n\r\n\r\n  getPayoutMethod() {\r\n    this.api.getPayoutByUser(this.session.getUser().id).subscribe(data => {\r\n      this.payoutData = data.results[0];\r\n      this.payment.patchValue({\r\n        name: data.results[0].name,\r\n        account: data.results[0].bank,\r\n        swift: data.results[0].swift,\r\n      });\r\n      this.exist = true;\r\n      console.log('this is payout method of user', data);\r\n    }, error => {\r\n      console.log('this is payout method of user', error);\r\n      this.exist = false;\r\n\r\n    });\r\n  }\r\n\r\n  postPayoutMethod() {\r\n    const body = {\r\n      name : this.payment.value.name,\r\n      bank : this.payment.value.account,\r\n      swift : this.payment.value.swift,\r\n      user : this.session.getUser().id,\r\n      enable: true\r\n    };\r\n    this.api.postPayout(body).subscribe( data => {\r\n      console.log('Payout method posted successfully', data);\r\n    }, error => {\r\n      console.log('An error occurred while posting payout method', error);\r\n    });\r\n  }\r\n\r\n\r\n  updatePayoutMethod() {\r\n    console.log('this is payout data', this.payoutData );\r\n    const body = {\r\n      name : this.payment.value.name,\r\n      bank : this.payment.value.account,\r\n      swift : this.payment.value.swift,\r\n    };\r\n    this.api.updatePayout(this.payoutData._id, body).subscribe( data => {\r\n      console.log('Payout method posted successfully', data);\r\n    }, error => {\r\n      console.log('An error occurred while posting payout method', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]}