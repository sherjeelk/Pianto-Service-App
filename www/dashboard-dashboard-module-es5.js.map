{"version":3,"sources":["webpack:///src/app/dashboard/dashboard.page.html","webpack:///src/app/dashboard/dashboard-routing.module.ts","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/dashboard/dashboard.page.scss","webpack:///src/app/dashboard/dashboard.page.ts"],"names":["routes","path","component","DashboardPageRoutingModule","imports","forChild","exports","DashboardPageModule","declarations","entryComponents","providers","provide","useValue","hasBackdrop","DashboardPage","bottomSheet","dialog","api","modalController","session","util","date","weekOrders","monthOrders","yearOrders","weekReviews","monthReviews","yearReviews","reviewArray","Array","type","typeOfEarning","earningPercentage","dates","start","subtract","end","init","getWeeklyOrder","getMonthlyOrder","getAnnualOrder","getWeeklyReviews","getMonthlyReviews","getAnnualReviews","checkLogin","getAvgReview","totalEarning","toFixed","getOrdersByDate","toDate","toISOString","getUser","id","subscribe","data","status","console","log","error","getReviewsByDate","order","open","review","format","create","modal","present","avgReview","length","Number","isNaN","Math","round","selector","template"],"mappings":"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","file":"dashboard-dashboard-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-title>Dashboard</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n    <mat-tab-group>\\r\\n        <!--    Review Tab-->\\r\\n        <mat-tab label=\\\"Review\\\">\\r\\n\\r\\n            <div>\\r\\n                <mat-card class=\\\"mat-elevation-z3 money-card\\\">\\r\\n                    <h6>Average Rating</h6>\\r\\n                    <div>\\r\\n                        <ion-icon name=\\\"star\\\" *ngFor=\\\"let i of reviewArray(avgReview).fill(1)\\\"></ion-icon>\\r\\n\\r\\n                    </div>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n\\r\\n            <div>\\r\\n                <nav>\\r\\n                    <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\"\\r\\n                           role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\" (click)=\\\"getWeeklyReviews()\\\">Last 7\\r\\n                            Days</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-profile\\\"\\r\\n                           role=\\\"tab\\\" aria-controls=\\\"nav-profile\\\" aria-selected=\\\"false\\\" (click)=\\\"getMonthlyReviews()\\\">Last\\r\\n                            30 Days</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contact-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contact\\\"\\r\\n                           role=\\\"tab\\\" aria-controls=\\\"nav-contact\\\" aria-selected=\\\"false\\\" (click)=\\\"getAnnualReviews()\\\">Last\\r\\n                            365 Days</a>\\r\\n                    </div>\\r\\n                </nav>\\r\\n                <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n\\r\\n                    <div class=\\\"tab-pane fade show active expansion-tab-container\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\"\\r\\n                         aria-labelledby=\\\"nav-home-tab\\\">\\r\\n\\r\\n                        <mat-card *ngFor=\\\"let review of weekReviews\\\" (click)=\\\"openReviewBottomSheet(review)\\\"\\r\\n                                  style=\\\"margin: 10px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n                            <div class=\\\"details-container\\\">\\r\\n                                <div>#{{review._id}}</div>\\r\\n                                <div>{{getHumanShortDate(review.date)}}</div>\\r\\n                                <div>{{util.getTime(review.date)}}</div>\\r\\n                            </div>\\r\\n                            <hr>\\r\\n\\r\\n                            <div class=\\\"rating-container\\\">\\r\\n                                <span>{{review.name}}</span>\\r\\n                                <span>\\r\\n                  <ion-icon name=\\\"star\\\" *ngFor=\\\"let i of reviewArray(review.rating).fill(1)\\\"></ion-icon>\\r\\n\\r\\n                </span>\\r\\n                            </div>\\r\\n                        </mat-card>\\r\\n\\r\\n                        <mat-card *ngIf=\\\"weekReviews.length === 0\\\" style=\\\"margin: 16px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n\\r\\n                            <div>\\r\\n                                <h2 class=\\\"no-order-icon\\\">\\r\\n                                    <ion-icon name=\\\"pricetag-outline\\\"></ion-icon>\\r\\n                                </h2>\\r\\n                                <h5 class=\\\"no-order-text\\\">No Reviews Found</h5></div>\\r\\n\\r\\n                        </mat-card>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"tab-pane fade\\\" id=\\\"nav-profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-profile-tab\\\">\\r\\n                        <mat-card *ngFor=\\\"let review of monthReviews\\\" (click)=\\\"openReviewBottomSheet(review)\\\"\\r\\n                                  style=\\\"margin: 10px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n                            <div class=\\\"details-container\\\">\\r\\n                                <div>#{{review._id}}</div>\\r\\n                                <div>{{getHumanShortDate(review.date)}}</div>\\r\\n<!--                                <div>14:35</div>-->\\r\\n                            </div>\\r\\n                            <hr>\\r\\n\\r\\n                            <div class=\\\"rating-container\\\">\\r\\n                                <span>{{review.name}}</span>\\r\\n                                <span>\\r\\n                        <ion-icon name=\\\"star\\\" *ngFor=\\\"let i of reviewArray(review.rating).fill(1)\\\"></ion-icon>\\r\\n\\r\\n\\r\\n                </span>\\r\\n                            </div>\\r\\n                        </mat-card>\\r\\n                        <mat-card *ngIf=\\\"monthReviews.length === 0\\\" style=\\\"margin: 16px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n\\r\\n                            <div>\\r\\n                                <h2 class=\\\"no-order-icon\\\">\\r\\n                                    <ion-icon name=\\\"pricetag-outline\\\"></ion-icon>\\r\\n                                </h2>\\r\\n                                <h5 class=\\\"no-order-text\\\">No Reviews Found</h5></div>\\r\\n\\r\\n                        </mat-card>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"tab-pane fade\\\" id=\\\"nav-contact\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contact-tab\\\">\\r\\n\\r\\n                        <mat-card *ngFor=\\\"let review of yearReviews\\\" (click)=\\\"openReviewBottomSheet(review)\\\"\\r\\n                                  style=\\\"margin: 10px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n                            <div class=\\\"details-container\\\">\\r\\n                                <div>#{{review._id}}</div>\\r\\n                                <div>{{getHumanShortDate(review.date)}}</div>\\r\\n<!--                                <div>14:35</div>-->\\r\\n                            </div>\\r\\n                            <hr>\\r\\n\\r\\n                            <div class=\\\"rating-container\\\">\\r\\n                                <span>{{review.name}}</span>\\r\\n                                <span>\\r\\n                  <ion-icon name=\\\"star\\\" *ngFor=\\\"let i of reviewArray(review.rating).fill(1)\\\"></ion-icon>\\r\\n\\r\\n                </span>\\r\\n                            </div>\\r\\n                        </mat-card>\\r\\n                        <mat-card *ngIf=\\\"yearReviews.length === 0\\\" style=\\\"margin: 16px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n\\r\\n                            <div>\\r\\n                                <h2 class=\\\"no-order-icon\\\">\\r\\n                                    <ion-icon name=\\\"pricetag-outline\\\"></ion-icon>\\r\\n                                </h2>\\r\\n                                <h5 class=\\\"no-order-text\\\">No Reviews Found</h5></div>\\r\\n\\r\\n                        </mat-card>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </mat-tab>\\r\\n        <!--    Earning Tab-->\\r\\n        <mat-tab label=\\\"Payment\\\">\\r\\n            <div>\\r\\n                <mat-card class=\\\"mat-elevation-z3 money-card\\\">\\r\\n                    <h6>Total</h6>\\r\\n                    <h3>{{getTotalEarning(typeOfEarning)}}&euro;</h3>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n\\r\\n            <div>\\r\\n                <nav>\\r\\n                    <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\"\\r\\n                           role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\" (click)=\\\"typeOfEarning = 1\\\">Last 7\\r\\n                            Days</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-profile\\\"\\r\\n                           role=\\\"tab\\\" aria-controls=\\\"nav-profile\\\" aria-selected=\\\"false\\\" (click)=\\\"typeOfEarning = 2\\\">Last\\r\\n                            30 Days</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contact-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contact\\\"\\r\\n                           role=\\\"tab\\\" aria-controls=\\\"nav-contact\\\" aria-selected=\\\"false\\\" (click)=\\\"typeOfEarning = 3\\\">Last\\r\\n                            365 Days</a>\\r\\n                    </div>\\r\\n                </nav>\\r\\n                <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n\\r\\n                    <!--          Last week-->\\r\\n\\r\\n                    <div class=\\\"tab-pane fade show active expansion-tab-container\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\"\\r\\n                         aria-labelledby=\\\"nav-home-tab\\\">\\r\\n\\r\\n                        <mat-card *ngFor=\\\"let order of weekOrders\\\" style=\\\"padding: 10px\\\" class=\\\"mat-elevation-z2\\\"\\r\\n                                  (click)=\\\"openEarningBottomSheet(order)\\\">\\r\\n                            <div class=\\\"details-container\\\">\\r\\n                                <div>#{{order._id}}</div>\\r\\n                                <div>{{getHumanShortDate(order.date)}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"text-right\\\">\\r\\n                                <div>{{util.getTime(order.date)}}</div>\\r\\n                            </div>\\r\\n                            <hr>\\r\\n\\r\\n                            <div class=\\\"rating-container\\\">\\r\\n                                <span>{{order.name}}</span>\\r\\n                                <span>\\r\\n                                   {{((order.total + order.discount) * earningPercentage).toFixed(2)}}&euro;\\r\\n\\r\\n\\r\\n                </span>\\r\\n                            </div>\\r\\n                        </mat-card>\\r\\n\\r\\n                        <mat-card *ngIf=\\\"weekOrders.length === 0\\\" style=\\\"margin: 16px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n\\r\\n                            <div>\\r\\n                                <h2 class=\\\"no-order-icon\\\">\\r\\n                                    <ion-icon name=\\\"cube-outline\\\"></ion-icon>\\r\\n                                </h2>\\r\\n                                <h5 class=\\\"no-order-text\\\">No Orders Found</h5></div>\\r\\n\\r\\n                        </mat-card>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <!--          Last Month-->\\r\\n\\r\\n                    <div class=\\\"tab-pane fade\\\" id=\\\"nav-profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-profile-tab\\\">\\r\\n\\r\\n                        <mat-card *ngFor=\\\"let order of monthOrders\\\" style=\\\"margin: 10px\\\" class=\\\"mat-elevation-z2\\\"\\r\\n                                  (click)=\\\"openEarningBottomSheet(order)\\\">\\r\\n                            <div class=\\\"details-container\\\">\\r\\n                                <div>#{{order._id}}</div>\\r\\n                                <div>{{getHumanShortDate(order.date)}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"text-right\\\">\\r\\n                                <div>{{util.getTime(order.date)}}</div>\\r\\n\\r\\n                            </div>\\r\\n                            <hr>\\r\\n\\r\\n                            <div class=\\\"rating-container\\\">\\r\\n                                <span>{{order.name}}</span>\\r\\n                                <span>\\r\\n                                   {{((order.total + order.discount) * earningPercentage).toFixed(2)}}&euro;\\r\\n\\r\\n\\r\\n                </span>\\r\\n                            </div>\\r\\n                        </mat-card>\\r\\n\\r\\n                        <mat-card *ngIf=\\\"monthOrders.length === 0\\\" style=\\\"margin: 16px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n\\r\\n                            <div>\\r\\n                                <h2 class=\\\"no-order-icon\\\">\\r\\n                                    <ion-icon name=\\\"cube-outline\\\"></ion-icon>\\r\\n                                </h2>\\r\\n                                <h5 class=\\\"no-order-text\\\">No Orders Found</h5></div>\\r\\n\\r\\n                        </mat-card>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <!--          Last Year-->\\r\\n\\r\\n                    <div class=\\\"tab-pane fade\\\" id=\\\"nav-contact\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contact-tab\\\">\\r\\n                        <mat-card *ngFor=\\\"let order of yearOrders\\\" (click)=\\\"openEarningBottomSheet(order)\\\"\\r\\n                                  style=\\\"margin: 10px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n                            <div class=\\\"details-container\\\">\\r\\n                                <div>#{{order._id}}</div>\\r\\n                                <span>{{getHumanShortDate(order.date)}}</span>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"text-right\\\">\\r\\n                                <span class=\\\"m-l-5 m-r-5\\\">{{util.getTime(order.date)}}</span>\\r\\n                            </div>\\r\\n                            <hr>\\r\\n\\r\\n                            <div class=\\\"rating-container\\\">\\r\\n                                <span>{{order.name}}</span>\\r\\n                                <span>\\r\\n                                   {{((order.total + order.discount) * earningPercentage).toFixed(2)}}&euro;\\r\\n\\r\\n\\r\\n                </span>\\r\\n                            </div>\\r\\n                        </mat-card>\\r\\n\\r\\n                        <mat-card *ngIf=\\\"yearOrders.length === 0\\\" style=\\\"margin: 10px\\\" class=\\\"mat-elevation-z2\\\">\\r\\n                            <div>\\r\\n                                <div class=\\\"no-order-icon\\\">\\r\\n                                    <ion-icon name=\\\"cube-outline\\\"></ion-icon>\\r\\n                                </div>\\r\\n                                <h5 class=\\\"no-order-text\\\">No Orders Found</h5>\\r\\n                            </div>\\r\\n                        </mat-card>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardPage } from './dashboard.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\r\n\r\nimport { DashboardPage } from './dashboard.page';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {EarningPopupPage} from '../modals/earning-popup/earning-popup.page';\r\nimport {MAT_DIALOG_DEFAULT_OPTIONS, MatDialogModule} from '@angular/material/dialog';\r\nimport {ReviewPopupPage} from '../modals/review-popup/review-popup.page';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        DashboardPageRoutingModule,\r\n        MatTabsModule,\r\n        MatCardModule,\r\n        MatExpansionModule,\r\n        MatDialogModule,\r\n        MatBottomSheetModule\r\n\r\n    ],\r\n  declarations: [DashboardPage],\r\n    entryComponents: [EarningPopupPage, ReviewPopupPage],\r\n    providers: [{provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}]\r\n\r\n})\r\nexport class DashboardPageModule {}\r\n","export default \".money-card {\\n  text-align: center;\\n  margin: 20px;\\n}\\n\\n.nav-tabs .nav-item {\\n  margin-bottom: -1px;\\n  min-width: 33.33%;\\n}\\n\\n.expansion-tab-container {\\n  padding: 10px;\\n}\\n\\n.details-container {\\n  display: flex;\\n  flex-direction: row;\\n  /* make main axis horizontal (default setting) */\\n  justify-content: space-between;\\n  /* center items horizontally, in this case */\\n  align-items: center;\\n  /* center items vertically, in this case */\\n}\\n\\nhr {\\n  background-color: #dbdbdb;\\n}\\n\\n.rating-container {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.no-order-icon {\\n  text-align: center;\\n  font-size: 60px;\\n  color: #767676;\\n}\\n\\n.no-order-text {\\n  text-align: center;\\n  font-size: 18px;\\n  color: #767676;\\n}\\n\\n.mat-card {\\n  border-radius: 12px;\\n}\\n\\n.nav-link {\\n  display: block;\\n  padding: 5px 0;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUF5QixnREFBQTtFQUN6Qiw4QkFBQTtFQUFnQyw0Q0FBQTtFQUNoQyxtQkFBQTtFQUF5QiwwQ0FBQTtBQUkzQjs7QUFEQTtFQUNFLHlCQUFBO0FBSUY7O0FBREE7RUFDRSxhQUFBO0VBQ0EsOEJBQUE7QUFJRjs7QUFEQTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7QUFJRjs7QUFGQTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7QUFLRjs7QUFGQTtFQUNFLG1CQUFBO0FBS0Y7O0FBREE7RUFDRSxjQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0FBSUYiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb25leS1jYXJke1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW46IDIwcHg7XHJcbn1cclxuXHJcbi5uYXYtdGFicyAubmF2LWl0ZW0ge1xyXG4gIG1hcmdpbi1ib3R0b206IC0xcHg7XHJcbiAgbWluLXdpZHRoOiAzMy4zMyU7XHJcbn1cclxuXHJcbi5leHBhbnNpb24tdGFiLWNvbnRhaW5lcntcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4uZGV0YWlscy1jb250YWluZXJ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93OyAgICAgLyogbWFrZSBtYWluIGF4aXMgaG9yaXpvbnRhbCAoZGVmYXVsdCBzZXR0aW5nKSAqL1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgLyogY2VudGVyIGl0ZW1zIGhvcml6b250YWxseSwgaW4gdGhpcyBjYXNlICovXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgICAgIC8qIGNlbnRlciBpdGVtcyB2ZXJ0aWNhbGx5LCBpbiB0aGlzIGNhc2UgKi9cclxufVxyXG5cclxuaHJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RiZGJkYjtcclxufVxyXG5cclxuLnJhdGluZy1jb250YWluZXJ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbi5uby1vcmRlci1pY29ue1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDYwcHg7XHJcbiAgY29sb3I6ICM3Njc2NzY7XHJcbn1cclxuLm5vLW9yZGVyLXRleHR7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBjb2xvcjogIzc2NzY3NjtcclxufVxyXG5cclxuLm1hdC1jYXJke1xyXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcblxyXG59XHJcblxyXG4ubmF2LWxpbmsge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBhZGRpbmc6IDVweCAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4iXX0= */\";","import {Component, OnInit} from '@angular/core';\r\nimport {EarningPopupPage} from '../modals/earning-popup/earning-popup.page';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport * as moment from 'moment';\r\nimport * as _ from 'lodash';\r\nimport {ApiServiceService} from '../services/api-service.service';\r\nimport {Order} from '../models/Orders';\r\nimport {ModalController} from '@ionic/angular';\r\nimport {ReviewPopupPage} from '../modals/review-popup/review-popup.page';\r\nimport {SessionService} from '../services/session.service';\r\nimport {UtilService} from '../services/util.service';\r\nimport {MatBottomSheet} from '@angular/material/bottom-sheet';\r\nimport {ReviewSheetPage} from '../modals/review-sheet/review-sheet.page';\r\nimport {EarningSheetPage} from '../modals/earning-sheet/earning-sheet.page';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.page.html',\r\n    styleUrls: ['./dashboard.page.scss'],\r\n})\r\nexport class DashboardPage implements OnInit {\r\n\r\n    animal: string;\r\n    name: string;\r\n    date = moment();\r\n    weekOrders: Order[] = [];\r\n    monthOrders: Order[] = [];\r\n    yearOrders: Order[] = [];\r\n\r\n    weekReviews = [];\r\n    monthReviews = [];\r\n    yearReviews = [];\r\n\r\n    reviewArray = Array;\r\n    totalEarning: number;\r\n    avgReview: number;\r\n\r\n    type = 1;\r\n    typeOfEarning = 1;\r\n    earningPercentage = 0.7;\r\n    dates = [{start: moment().subtract(7, 'days')},\r\n        {start: moment().subtract(30, 'days'), end: moment()},\r\n        {start: moment().subtract(365, 'days'), end: moment()}];\r\n\r\n    constructor(private bottomSheet: MatBottomSheet, public dialog: MatDialog, private api: ApiServiceService, public modalController: ModalController, private session: SessionService, public util: UtilService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n        this.getWeeklyOrder();\r\n        this.getMonthlyOrder();\r\n        this.getAnnualOrder();\r\n\r\n        this.getWeeklyReviews();\r\n        this.getMonthlyReviews();\r\n        this.getAnnualReviews();\r\n    }\r\n\r\n    async init() {\r\n        await this.util.checkLogin();\r\n        this.getAvgReview(1);\r\n        this.getWeeklyReviews();\r\n\r\n    }\r\n\r\n\r\n    getTotalEarning(type) {\r\n\r\n        if (type === 1) {\r\n            this.totalEarning = _.sumBy(this.weekOrders, 'total') + _.sumBy(this.weekOrders, 'discount');\r\n            return (this.totalEarning * this.earningPercentage).toFixed(2);\r\n\r\n        } else if (type === 2) {\r\n            this.totalEarning = _.sumBy(this.monthOrders, 'total') + _.sumBy(this.monthOrders, 'discount');\r\n            return (this.totalEarning * this.earningPercentage).toFixed(2);\r\n\r\n        } else if (type === 3) {\r\n            this.totalEarning = _.sumBy(this.yearOrders, 'total') +  _.sumBy(this.yearOrders, 'discount');\r\n            return (this.totalEarning * this.earningPercentage).toFixed(2);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getWeeklyOrder() {\r\n        this.api.getOrdersByDate(moment().subtract(7, 'days').toDate().toISOString(), moment().toDate().toISOString(), this.session.getUser().id).subscribe(data => {\r\n            // this.weekOrders = data;\r\n            this.weekOrders = _.filter(data, {status: 'COMPLETED'});\r\n            console.log('these are week orders', this.weekOrders);\r\n\r\n        }, error => {\r\n            console.log('an error occurred while fetching weekly order data', error);\r\n\r\n        });\r\n    }\r\n\r\n    getMonthlyOrder() {\r\n\r\n        this.api.getOrdersByDate(moment().subtract(30, 'days').toDate().toISOString(), moment().toDate().toISOString(), this.session.getUser().id).subscribe(data => {\r\n            // this.monthOrders = data;\r\n            this.monthOrders = _.filter(data, {status: 'COMPLETED'});\r\n\r\n        }, error => {\r\n            console.log('an error occurred while fetching monthly data', error);\r\n\r\n        });\r\n    }\r\n\r\n    getAnnualOrder() {\r\n\r\n        this.api.getOrdersByDate(moment().subtract(365, 'days').toDate().toISOString(), moment().toDate().toISOString(), this.session.getUser().id).subscribe(data => {\r\n            // this.yearOrders = data;\r\n            this.yearOrders = _.filter(data, {status: 'COMPLETED'});\r\n\r\n            console.log('**************', this.yearOrders);\r\n\r\n        }, error => {\r\n            console.log('an error occurred while fetching annual Order data', error);\r\n\r\n        });\r\n    }\r\n\r\n    getWeeklyReviews() {\r\n        this.type = 1;\r\n\r\n        this.api.getReviewsByDate(moment().subtract(7, 'days').toDate().toISOString(), moment().toDate().toISOString(), this.session.getUser().id).subscribe(data => {\r\n            this.weekReviews = data;\r\n            console.log('this review data from week review method ^^^^^^^^', this.weekReviews);\r\n            this.getAvgReview(1);\r\n        }, error => {\r\n            console.log('an error occurred while fetching weekly order data', error);\r\n\r\n        });\r\n    }\r\n\r\n    getMonthlyReviews() {\r\n        this.type = 2;\r\n\r\n        this.api.getReviewsByDate(moment().subtract(30, 'days').toDate().toISOString(), moment().toDate().toISOString(), this.session.getUser().id).subscribe(data => {\r\n            this.monthReviews = data;\r\n            console.log('this review data from week review method ^^^^^^^^', this.monthReviews);\r\n            this.getAvgReview(2);\r\n\r\n        }, error => {\r\n            console.log('an error occurred while fetching monthly data', error);\r\n\r\n        });\r\n    }\r\n\r\n    getAnnualReviews() {\r\n        this.type = 3;\r\n\r\n        this.api.getReviewsByDate(moment().subtract(365, 'days').toDate().toISOString(), moment().toDate().toISOString(), this.session.getUser().id).subscribe(data => {\r\n            this.yearReviews = data;\r\n            console.log('this review data from week review method ^^^^^^^^', this.yearReviews);\r\n            this.getAvgReview(3);\r\n\r\n        }, error => {\r\n            console.log('an error occurred while fetching annual Order data', error);\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // Open Earning Bottom sheet\r\n    openEarningBottomSheet(order): void {\r\n        this.bottomSheet.open(EarningSheetPage, {\r\n            data: {order},\r\n\r\n        });\r\n    }\r\n\r\n    // Open review bottom sheet\r\n    openReviewBottomSheet(review): void {\r\n        this.bottomSheet.open(ReviewSheetPage, {\r\n            data: {review},\r\n\r\n        });\r\n    }\r\n\r\n    public getHumanShortDate(date) {\r\n        return moment(date).format('DD-MMM');\r\n    }\r\n\r\n    async presentModal(order) {\r\n        const modal = await this.modalController.create({\r\n            component: EarningPopupPage,\r\n        });\r\n        return await modal.present();\r\n    }\r\n\r\n\r\n    getAvgReview(type) {\r\n        if (type === 1) {\r\n            this.avgReview = _.sumBy(this.weekReviews, 'rating') / this.weekReviews.length;\r\n            this.avgReview = Number.isNaN(this.avgReview) ? 0 : Math.round(this.avgReview);\r\n            console.log('this is total avgreview type 1', this.avgReview);\r\n            console.log('this is week reviews lenght', this.weekReviews.length);\r\n        } else if (type === 2) {\r\n            this.avgReview = _.sumBy(this.monthReviews, 'rating') / this.monthReviews.length;\r\n            this.avgReview = Number.isNaN(this.avgReview) ? 0 : Math.round(this.avgReview);\r\n            console.log('this is total avgreview type 2', this.avgReview);\r\n        } else if (type === 3) {\r\n            this.avgReview = _.sumBy(this.yearReviews, 'rating') / this.yearReviews.length;\r\n            this.avgReview = Number.isNaN(this.avgReview) ? 0 : Math.round(this.avgReview);\r\n            console.log('this is total avgreview type 3', this.avgReview);\r\n        }\r\n    }\r\n\r\n}\r\n"]}