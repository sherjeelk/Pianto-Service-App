{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Login</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"!util.loading\\\">\\r\\n    <form (ngSubmit)=\\\"login()\\\" [formGroup]=\\\"loginForm\\\">\\r\\n    <mat-card class=\\\"mat-elevation-z3 login-card\\\">\\r\\n      <h3 class=\\\"text-center\\\">Pianto</h3>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Email</mat-label>\\r\\n          <input type=\\\"email\\\" formControlName=\\\"email\\\" matInput>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Password</mat-label>\\r\\n          <input formControlName=\\\"password\\\" type=\\\"password\\\" email=\\\"password\\\" matInput>\\r\\n        </mat-form-field>\\r\\n\\r\\n    </mat-card>\\r\\n\\r\\n    <button mat-button class=\\\"save-btn\\\" type=\\\"submit\\\">Login</button>\\r\\n\\r\\n    </form>\\r\\n\\r\\n    <p class=\\\"cp-text\\\">\\r\\n      Â© Copyright 2020 Pianto. All rights reserved.\\r\\n    </p>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"util.loading\\\" class=\\\"loading\\\">\\r\\n    <img src=\\\"assets/icon/icon.png\\\" width=\\\"64\\\" height=\\\"64\\\">\\r\\n    <h5 class=\\\"m-t-30\\\">Loading...</h5>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        LoginPageRoutingModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule,\r\n        MatSnackBarModule\r\n    ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","export default \".login-card {\\n  margin-top: 20px;\\n  border-radius: 12px;\\n}\\n\\n.cp-text {\\n  color: rgba(0, 0, 0, 0.7);\\n  text-shadow: 0 1px rgba(255, 255, 255, 0.1);\\n  font-size: 12px;\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\nbutton:focus {\\n  outline: none !important;\\n}\\n\\n.loading {\\n  width: 100%;\\n  height: 100vh;\\n  overflow: hidden;\\n  text-align: center;\\n  padding-top: 50%;\\n  background-color: #fafafa;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQVUseUJBQUE7RUFDUiwyQ0FBQTtFQUNBLGVBQUE7RUFDRixrQkFBQTtFQUFtQixnQkFBQTtBQUduQjs7QUFEQTtFQUNFLHdCQUFBO0FBSUY7O0FBREE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0FBSUYiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY2FyZHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbn1cclxuXHJcbi5jcC10ZXh0eyBjb2xvcjogcmdiYSgwLDAsMCwuNyk7XHJcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcclxuICBmb250LXNpemU6IDEycHg7XHJcbnRleHQtYWxpZ246IGNlbnRlcjttYXJnaW4tdG9wOiAyMHB4fVxyXG5cclxuYnV0dG9uOmZvY3VzIHtcclxuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5sb2FkaW5ne1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZy10b3A6IDUwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {ApiServiceService} from '../services/api-service.service';\r\nimport {SessionService} from '../services/session.service';\r\nimport {UtilService} from '../services/util.service';\r\nimport {LocalStorageService} from '../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = true;\r\n\r\n  constructor(private local: LocalStorageService, private formBuilder: FormBuilder, private api: ApiServiceService, private router: Router, private session: SessionService, public util: UtilService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.takeToHome();\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  takeToHome(){\r\n    this.util.checkLogin().then(() => {\r\n      if (this.session.isLoggedIn){\r\n        this.router.navigate(['/tab/tabs/home'], {replaceUrl: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    this.takeToHome();\r\n  }\r\n\r\n  async login() {\r\n\r\n    const body = {\r\n      email : this.loginForm.value.email,\r\n      password : this.loginForm.value.password\r\n    };\r\n\r\n    try {\r\n      const loginResponse =  await this.api.login(body).toPromise();\r\n      if (loginResponse.user.role !== 'service') {\r\n        this.util.openSnackBar('Please login through Service Man id', '');\r\n      } else {\r\n        if (loginResponse.tokens.access) {\r\n          await this.saveInfo(loginResponse);\r\n        }\r\n        console.log('this is login response', loginResponse.tokens.access.token);\r\n      }\r\n    } catch (e) {\r\n      this.util.openSnackBar(e, '');\r\n      // Now call msg service and there should be an special dialog for error this.msgService.showError(e.msg)\r\n    }\r\n  }\r\n\r\n\r\n  async saveInfo(data){\r\n    console.log('this is user data from api', data);\r\n    try {\r\n      await this.session.setToken(data.tokens.access.token);\r\n      await this.api.setToken(data.tokens.access.token);\r\n      const fcmToken = await this.local.getValue('fcm_token');\r\n      const fcm = await this.api.setFCMToken(data.user.id, fcmToken).toPromise();\r\n      console.log('FCM TOKEN', fcm, fcmToken);\r\n      await this.api.setHeaders();\r\n      await this.session.setUser(data.user);\r\n      await this.router.navigateByUrl('/tab/tabs/home');\r\n      console.log('It should move');\r\n    } catch (e) {\r\n      console.log('an error occurred in saving info', e);\r\n    }\r\n  }\r\n\r\n  // async checkLogin() {\r\n  //   // show loading\r\n  //   this.loading = true;\r\n  //   console.log('this is session login', this.session.isLoggedIn);\r\n  //   if (this.session.isSessionReady){\r\n  //     if (this.session.isLoggedIn) {\r\n  //       this.router.navigate(['tab/tabs/home'], {replaceUrl: true});\r\n  //     }\r\n  //     this.loading = false;\r\n  //   } else {\r\n  //     setTimeout(() => {\r\n  //       this.checkLogin();\r\n  //     }, 300);\r\n  //   }\r\n  // }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}